<?phpfunction assignWhFiles($CI, $items) {    foreach($items as $k => $d) {        foreach($d->ct_files as $k_b => $d_b) {            $file_ids = $d_b->value;            $file_ids = explode(',', $file_ids);            $d_b->fileName = [];            foreach($file_ids as $k_id => $id) {                $file_db = $CI->db->table("wh_files")->where(["id" => $id])                    ->get()                    ->getResult();                if ($CI->db->affectedRows() > 0) { $d_b->fileName[] = $file_db[0]->file_name; }                else { $d_b->fileName[] = ''; }            }        }    }    return $items;}function assignCats($CI, $items) {    foreach($items as $k => $d) {        foreach($d->ct_categories as $k_b => $d_b) {            $data_db =                $CI->db->table("ct_titles")->where(["parent_id" => $d_b->value])                    ->get()                    ->getResult();            if ($CI->db->affectedRows() > 0) {                $d_b->title = $data_db[0]->title;            }        }    }    return $items;}function loadpage($page = "", $data, $panel = false, $templatesB = false) {//    $CI =& get_instance();    $panelStr = "";    $templatesBStr = "";    if ($panel) {        $panelStr = "panel/";    }    if (!$templatesB) { $templatesBStr = "templates/"; } else { $templatesBStr = "templatesB/"; }//    echo " a:<pre>"; print_r($data); echo "</pre>"; die;    if ($page === "login") {        echo view($panelStr . $templatesBStr . "headerHtml.php");        echo view($panelStr . $page, $data);        echo view($panelStr . $templatesBStr . "footerHtml.php");    } else {        echo view($panelStr . $templatesBStr . "headerHtml.php", $data);        echo view($panelStr . $templatesBStr . "header.php", $data);        echo view($panelStr . $page, $data);        echo view($panelStr . $templatesBStr . "footer.php");        echo view($panelStr . $templatesBStr . "footerHtml.php");    }}function panelUserLoggedInCheck() {    if (!isset($_SESSION["puser_id"])) {      header('location: ' . base_url('/panel/login/index'));        exit();    } else {        return "";    }}function objedengetir($obje, $searcher, $alan){    $index = -1;    foreach ($obje as $k => $d) {        $found = true;        foreach ($searcher as $k_b => $d_b) {            if($d->{$k_b} !== $d_b){ $found = false; }        }        if ($found) { $index = $k; break; }    }    $return = null;    if($index != -1 && $alan === "self" ) { $return = $obje[$index]; }    else if($index != -1 && isset($obje[$index]->{$alan})) { $return = $obje[$index]->{$alan}; }    return $return;}function objedengetirArray($obje, $searcher, $alan){    $index = -1;    foreach ($obje as $k => $d) {        $found = true;        foreach ($searcher as $k_b => $d_b) {            if($d[$k_b] !== $d_b){ $found = false; }        }        if ($found) { $index = $k; break; }    }    $return = null;    if($index != -1 && $alan === "self" ) { $return = $obje[$index]; }    else if($index != -1 && isset($obje[$index][$alan])) { $return = $obje[$index][$alan]; }    return $return;}function _dp($str) {   return _d($str, "panel");}function _d($str, $panelStr = "") {    $ret = $str;    $langArray = $_SESSION[$panelStr . "lang_array"];    if (!empty($_SESSION["lang_id"])) {        $lang_id = $_SESSION["lang_id"];        foreach($langArray as $k => $d) {            if ($k === $str) {                if (isset($d[$lang_id])) {                    $ret = $d[$lang_id];                }            }        }    }    return $ret;}function divuni($inn, $sy = '/', $order = [2, 1, 0], $ny = '-') {    $ar = explode($sy, $inn);    $nar = [];    foreach($ar as $k => $d) {        $nar[$order[$k]] = $d;    }    ksort($nar);    $ret = implode($ny, $nar);    return $ret;}function ytrim($inn) {    return str_replace('https://www.youtube.com/embed/', '', $inn);}function daysBef($inn) {    return date_diff(        date_create()        , date_create(divuni($inn))    )        ->format('%a gün önce');}function ccdm($inn) {    if (!strstr($inn, '/')) {//        echo $inn. '-abc-';//        return '';    }    $dt = DateTime::createFromFormat('d/m/Y', $inn);    $day = $dt->format('D');    $month = $dt->format('n');    if ($day === 'Mon') { $day = 'PAZARTESİ'; }    else if ($day === 'Tue') { $day = 'SALI'; }    else if ($day === 'Wed') { $day = 'ÇARŞAMBA'; }    else if ($day === 'Thu') { $day = 'PERŞEMBE'; }    else if ($day === 'Fri') { $day = 'CUMA'; }    else if ($day === 'Sat') { $day = 'CUMARTESİ'; }    else if ($day === 'Sun') { $day = 'PAZAR'; }    $month = month_tra($month);    return $dt->format('d') . ' ' . $month . ', ' . $day;}function month_tra($month) {    if ($month == '1') { $month = 'OCAK'; }    else if ($month == '2') { $month = 'ŞUBAT'; }    else if ($month == '3') { $month = 'MART'; }    else if ($month == '4') { $month = 'NİSAN'; }    else if ($month == '5') { $month = 'MAYIS'; }    else if ($month == '6') { $month = 'HAZİRAN'; }    else if ($month == '7') { $month = 'TEMMUZ'; }    else if ($month == '8') { $month = 'AĞUSTOS'; }    else if ($month == '9') { $month = 'EYLÜL'; }    else if ($month == '10') { $month = 'EKİM'; }    else if ($month == '11') { $month = 'KASIM'; }    else if ($month == '12') { $month = 'ARALIK'; }    return $month;}function slugify($text, string $divider = '-'){    $text = str_replace([        'Ç', 'Ğ', 'İ', 'Ö', 'Ş', 'Ü'        ,'ç', 'ğ', 'ı', 'ö', 'ş', 'ü'    ], [        'c', 'g', 'i', 'o', 's', 'u'        ,'c', 'g', 'i', 'o', 's', 'u'    ], $text);    // replace non letter or digits by divider    $text = preg_replace('~[^\pL\d]+~u', $divider, $text);    // transliterate    $text = iconv('utf-8', 'us-ascii//TRANSLIT', $text);    // remove unwanted characters    $text = preg_replace('~[^-\w]+~', '', $text);    // trim    $text = trim($text, $divider);    // remove duplicate divider    $text = preg_replace('~-+~', $divider, $text);    // lowercase    $text = strtolower($text);    if (empty($text)) {        return 'n-a';    }    return $text;}